using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using D3DLab.Core.Render.Context;
using D3DLab.Core.Visual3D;
using HelixToolkit.Wpf.SharpDX.WinForms;

namespace D3DLab.Core.Components {
    public interface IContainerComponent {
        IEnumerable<IRenderable> Items { get; }
        void Add(IRenderable item);
        void Remove(IRenderable item);
    }
    public class RenderItemsContainerComponent : Components.Component {
        private ComponentContainer parent;
        public void AttachTo(ComponentContainer parent) {
            this.parent = parent;
        }

        public void Update(SharpDevice device) {
            foreach (var child in parent.GetComponents<IRenderable>()) {
                child.Update(device);
            }
        }
        public void Render(RenderContext context) {
            foreach (var child in parent.GetComponents<IRenderable>()) {
                child.Render(context);
            }
        }

    }
}
