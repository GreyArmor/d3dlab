<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:d3DLab="clr-namespace:D3DLab">

    <SolidColorBrush x:Key="BlackBackgroundColor">#1E1E1E</SolidColorBrush>
    <SolidColorBrush x:Key="BorderBrushColor">White</SolidColorBrush>
    <SolidColorBrush x:Key="TextColor">White</SolidColorBrush>
    <SolidColorBrush x:Key="SelectedBorderBrushColor">#569CD6</SolidColorBrush>

    <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Background" Value="Transparent"/>
    </Style>

    <Style TargetType="{x:Type ListBox}" BasedOn="{StaticResource {x:Type ListBox}}">
        <Setter Property="Background" Value="{StaticResource BlackBackgroundColor}"/>
    </Style>

    <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource {x:Type ListBoxItem}}">
        <Setter Property="Background" Value="{StaticResource BlackBackgroundColor}"/>
    </Style>

    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Background" Value="{StaticResource BlackBackgroundColor}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border BorderThickness="1" BorderBrush="{StaticResource BorderBrushColor}" 
                            Background="{StaticResource BlackBackgroundColor}" 
                            CornerRadius="0" x:Name="btn_border">
                        <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                            <ContentPresenter Content="{TemplateBinding Content}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="btn_border" Property="BorderBrush"
                                    Value="{StaticResource BorderBrushColor}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="btn_border" Property="BorderBrush"
                                    Value="{StaticResource SelectedBorderBrushColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="ImageButton" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border BorderBrush="{StaticResource BorderBrushColor}" BorderThickness="1"  
                            Background="{StaticResource BlackBackgroundColor}" Name="btn_border">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="btn_border" Property="BorderBrush"
                                    Value="{StaticResource BorderBrushColor}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="btn_border" Property="BorderBrush"
                                    Value="{StaticResource SelectedBorderBrushColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="ImageToggleButton" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource {x:Type ToggleButton}}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border BorderBrush="{StaticResource BorderBrushColor}" BorderThickness="1"  
                            Background="{StaticResource BlackBackgroundColor}" Name="btn_border">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="btn_border" Property="BorderBrush"
                                    Value="{StaticResource SelectedBorderBrushColor}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="btn_border" Property="BorderBrush"
                                    Value="{StaticResource SelectedBorderBrushColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type TabControl}" BasedOn="{StaticResource {x:Type TabControl}}">
        <Setter Property="Background" Value="{StaticResource BlackBackgroundColor}"/>
    </Style>

    <Style TargetType="{x:Type TabItem}" BasedOn="{StaticResource {x:Type TabItem}}">
        <Setter Property="Background" Value="{StaticResource BlackBackgroundColor}"/>
        <Setter Property="Foreground" Value="White"/>
        <!--<Setter Property="OverridesDefaultStyle" Value="True" />-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Border BorderThickness="1" BorderBrush="{StaticResource BorderBrushColor}" 
                            CornerRadius="0" x:Name="ti_border" >
                        <Grid Name="TabPanel" Background="{StaticResource BlackBackgroundColor}">
                            <ContentPresenter x:Name="ContentSite"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Center"
                                        ContentSource="Header"
                                        Margin="10,2"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="ti_border" Property="BorderBrush"
                                    Value="{StaticResource SelectedBorderBrushColor}" />
                            <Setter TargetName="TabPanel" Property="Background" 
                                    Value="{StaticResource SelectedBorderBrushColor}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter TargetName="TabPanel" Property="Background"
                                    Value="{StaticResource BlackBackgroundColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="False">
                <Setter Property="BorderBrush" Value="White"/>
                <Setter Property="Background" Value="{StaticResource BlackBackgroundColor}"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="BorderBrush" Value="White"/>
                <Setter Property="Background" Value="{StaticResource BlackBackgroundColor}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--<Style TargetType="{x:Type TabPanel}" BasedOn="{StaticResource {x:Type TabPanel}}">
        <Setter Property="Background" Value="{StaticResource BlackBackgroundColor}"/>
    </Style>-->


    <!--<Style TargetType="{x:Type Border}" BasedOn="{StaticResource {x:Type Border}}">
        <Setter Property="Background" Value="{StaticResource BlackBackgroundColor}"/>
    </Style>-->


    <Style TargetType="{x:Type ContextMenu}" BasedOn="{StaticResource {x:Type ContextMenu}}">
        <Setter Property="Background" Value="{StaticResource BlackBackgroundColor}"/>
    </Style>

    <!--<Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}">
        --><!--<Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <ControlTemplate.Resources>
                        <SolidColorBrush x:Key="{x:Static SystemColors.WindowBrushKey}" Color="Yellow" />
                        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Red" />
                    </ControlTemplate.Resources>
                    <ContentPresenter/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>--><!--
        <Setter Property="Background" Value="{StaticResource BlackBackgroundColor}"/>
    </Style>-->

    <Style TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource {x:Type ToggleButton}}">
        <Setter Property="Background" Value="{StaticResource BlackBackgroundColor}"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="ClickMode" Value="Press"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}" >
                    <Grid Background="{StaticResource BlackBackgroundColor}">
                        
                    <ContentPresenter />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type TextBox}"  BasedOn="{StaticResource {x:Type TextBox}}">
        <Setter Property="Background" Value="{StaticResource BlackBackgroundColor}"/>
        <Setter Property="Foreground" Value="{StaticResource TextColor}"/>        
    </Style>

    <Style TargetType="{x:Type ComboBox}">
        <Setter Property="Height" Value="18" />
        <Setter Property="Background" Value="{StaticResource BlackBackgroundColor}" />
        <Setter Property="BorderBrush" Value="{StaticResource SelectedBorderBrushColor}" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <Grid.Resources>
                            <Style x:Key="comboToggleStyle" TargetType="{x:Type ToggleButton}">
                                <Setter Property="Foreground" Value="{StaticResource TextColor}" />
                                <Setter Property="Background" Value="{StaticResource BlackBackgroundColor}" />
                                <Setter Property="BorderBrush" Value="{StaticResource TextColor}" />
                                <Setter Property="BorderThickness" Value="0" />
                                <Setter Property="Padding" Value="0" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                                            <Grid>
                                                <Border x:Name="Background" BorderBrush="{TemplateBinding BorderBrush}" 
                                                        BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" />
                                                <Rectangle x:Name="DisabledVisualElement" IsHitTestVisible="false" Opacity="0" />
                                                <Border x:Name="MouseOverBorder" BorderThickness="{TemplateBinding BorderThickness}" Opacity="0" />
                                                <Border x:Name="PressedBorder" BorderThickness="{TemplateBinding BorderThickness}" Opacity="0" />
                                                <Rectangle x:Name="FocusRectangle" Stroke="{DynamicResource SelectedBorderBrushColor}" Opacity="0" />
                                                <Rectangle x:Name="CheckedRectangle" StrokeThickness="{TemplateBinding BorderThickness}" Opacity="0" 
                                                           Stroke="{DynamicResource SelectedBorderBrushColor}" />
                                                <Rectangle x:Name="FocusVisualElement" IsHitTestVisible="false" Margin="1" Stroke="{DynamicResource HighlightBrush}" 
                                                           StrokeThickness="1" Visibility="Collapsed" />
                                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                  IsHitTestVisible="false"
                                                                  Margin="{TemplateBinding Padding}"																		  
                                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                            </Grid>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Grid.Resources>
                        
                        <Border x:Name="ContentPresenterBorder" Padding="0,0,1,0" Margin="0,0,1,0">
                            <Grid>
                                <ToggleButton x:Name="DropDownToggle"
                                              BorderBrush="{TemplateBinding BorderBrush}"
                                              BorderThickness="{TemplateBinding BorderThickness}"                                              
											  Background="{TemplateBinding Background}"
                                              HorizontalAlignment="Stretch"
                                              HorizontalContentAlignment="Right"
                                              Margin="0"
                                              IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                              VerticalAlignment="Stretch"
											  VerticalContentAlignment="Stretch"
                                              KeyboardNavigation.IsTabStop="False">
                                    <Border x:Name="DropDownToggleButton" HorizontalAlignment="Right" Width="18" VerticalAlignment="Stretch" Margin="0" Background="{DynamicResource ButtonBrush}" >
                                        <Path x:Name="BtnArrow"
											  Data="F1 M 301.14,-189.041L 311.57,-189.041L 306.355,-182.942L 301.14,-189.041 Z "
											  HorizontalAlignment="Center"
											  VerticalAlignment="Center"
											  Height="4"
											  Margin="0,0,0,0"
											  Stretch="Uniform"
                                              Fill="{TemplateBinding Foreground}"
											  Width="8">
                                        </Path>
                                    </Border>
                                </ToggleButton>

                                <Border x:Name="EditableTextBoxBorder"
                                            Visibility="Collapsed"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="0,0,0,0"
                                            Background="{DynamicResource BlackBackgroundColor}"
                                            HorizontalAlignment="Stretch"
                                            Margin="0,1,18,0"
                                            VerticalAlignment="Stretch">
                                    <TextBox    x:Name="PART_EditableTextBox"
                                                    HorizontalAlignment="Stretch" 
                                                    Margin="{TemplateBinding Padding}" 
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                    Focusable="True"
                                                    IsReadOnly="{TemplateBinding IsReadOnly}"     
                                                
                                                   />
                                </Border>
                                <Grid Margin="5 0 19 0">
                                    <ContentPresenter x:Name="ContentSite" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" 
                                                      Content="{TemplateBinding SelectionBoxItem}"
                                                      ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Grid>
                            </Grid>
                        </Border>
                        <Rectangle x:Name="FocusRectangle" Stroke="{StaticResource SelectedBorderBrushColor}" Opacity="0" />
                        <Rectangle x:Name="DisabledVisualElement" Fill="Gray" IsHitTestVisible="false" Opacity="0" />
                        <Border x:Name="ValidationErrorElement" BorderBrush="Tomato" BorderThickness="1" Visibility="Collapsed">
                            <!--<ToolTipService.ToolTip>
                                <ToolTip x:Name="validationTooltip"
                                         DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                         Placement="Right"
                                         PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                         Template="{DynamicResource ValidationToolTipTemplate}">
                                    <ToolTip.Triggers>
                                        <EventTrigger RoutedEvent="Canvas.Loaded">
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="validationTooltip">
                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                            <DiscreteObjectKeyFrame.Value>
                                                                <System:Boolean>true</System:Boolean>
                                                            </DiscreteObjectKeyFrame.Value>
                                                        </DiscreteObjectKeyFrame>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                    </ToolTip.Triggers>
                                </ToolTip>
                            </ToolTipService.ToolTip>-->
                            <Grid Background="Transparent"
                                  HorizontalAlignment="Right"
                                  Height="12"
                                  Margin="1,-4,-4,0"
                                  VerticalAlignment="Top"
                                  Width="12">
                                <Path Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z" Fill="White" Margin="1,3,0,0" />
                                <Path Data="M 0,0 L2,0 L 8,6 L8,8" Fill="White" Margin="1,3,0,0" />
                            </Grid>
                        </Border>
                        <!--                        MinWidth="{Binding ActualWidth, RelativeSource={RelativeSource TemplatedParent}}"-->
                        <!--							   Width="{Binding ActualWidth, ElementName=ContentPresenterBorder}"-->
                        <Popup x:Name="PART_Popup"
                               IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                               PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
							   MinWidth="{Binding ActualWidth, ElementName=ContentPresenterBorder}"
                               MaxHeight="{Binding MaxDropDownHeight, RelativeSource={RelativeSource TemplatedParent}}"							   
							   VerticalOffset="1"							   
							   HorizontalOffset="0"
                               Placement="Bottom">
                            <Border x:Name="PopupBorder" Margin="0,0,0,0"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    HorizontalAlignment="Stretch"
                                    Height="Auto"
                                    BorderBrush="{StaticResource BorderBrushColor}"
                                    Background="{StaticResource BlackBackgroundColor}">
                                <ScrollViewer x:Name="DropDownScrollViewer" BorderThickness="0" Margin="0" Padding="0">
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" Margin="3,0,0,0"/>
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEditable" Value="True">
                            <Setter Property="IsTabStop" Value="false"/>
                            <Setter TargetName="EditableTextBoxBorder" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                            <Setter TargetName="DropDownToggle" Property="Focusable" Value="False"/>
                            <Setter TargetName="DropDownToggle" Property="HorizontalAlignment" Value="Right" />
                            <Setter TargetName="DropDownToggle" Property="Background" Value="Transparent" />
                        </Trigger>
                        <Trigger Property="IsDropDownOpen" Value="True">
                            <Setter Property="BorderThickness" Value="1" />
                            <Setter Property="Background" Value="{StaticResource BlackBackgroundColor}" />
                            <Setter TargetName="DropDownToggleButton" Property="BorderBrush" Value="{StaticResource BlackBackgroundColor}" />
                            <Setter TargetName="DropDownToggleButton" Property="BorderThickness" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="Gray" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="True">
                <Setter Property="Foreground" Value="{StaticResource TextColor}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="ComboBoxItem" >
        <Setter Property="Foreground" Value="{StaticResource TextColor}" />
        <Setter Property="Padding" Value="2,2,2,2" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="{StaticResource BlackBackgroundColor}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Margin" Value="0,1,3,1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Grid Background="{TemplateBinding Background}" Margin="0,0">
                        <Rectangle x:Name="SelectedRectangle" IsHitTestVisible="False" Opacity="0" Fill="{StaticResource SelectedBorderBrushColor}" />
                        <Rectangle x:Name="MouseOverRectangle" IsHitTestVisible="False" Opacity="0" Fill="{StaticResource SelectedBorderBrushColor}" />
                        <ContentControl Foreground="{TemplateBinding Foreground}">
                            <!--                        <ContentControl Foreground="{TemplateBinding Foreground}" ToolTip="{Binding Path=Content, ElementName=contentPresenter}">-->

                            <ContentPresenter x:Name="contentPresenter" Margin="{TemplateBinding Padding}" 
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </ContentControl>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="UIElement.Opacity" TargetName="SelectedRectangle" Value="1"/>
                            <Setter Property="TextElement.Foreground" Value="{StaticResource TextColor}"/>
                        </Trigger>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter Property="UIElement.Opacity" TargetName="MouseOverRectangle" Value="1"/>
                            <Setter Property="TextElement.Foreground" Value="{StaticResource BlackBackgroundColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>